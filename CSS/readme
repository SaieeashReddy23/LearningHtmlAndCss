CSS :- Cascading Style sheets


  -> We can add css to our html files in 3 ways 
         -> Inline css
         -> External css
         -> Internal css


         -> Power struggle . Inline css  > internal Css > External Css

         -> if external css is kept below or after the Internal css style component then styles of external css are considered . If the External css file is kept before or above the style component then styles of the styles component are considered .  The tag or the ones which come at the last overide the previous changes.


  -> h1{
    color:red;
    font-size:50px;
  }

        -> the above whole with the block and element is called a selector.
         -> here h1 is an element , it can be a class or an id.
         -> the lines inbertween the flower brackets is called declaration block
         -> color:red;  - this is called the declaration statement
         -> color  -  here this is the property
         -> red -  this is the property value
         -> if one of the declaration statement is wrong then the whole declaration block wont be executed


         -> Id has more preference than a class for an element with both class and id.


-> INheritance in css :- child elements inherit parent styles , we can overide them in child class



-> Last Rule:-

       -> it means that if the same selector or property rules  are added in a file at the starting and the after a few or more lines if that property is changed for that selector then the last rule or we can say the selector which was written at the bottom of the file will be considered.



-> Specificity

      -> There are like values assigned which addup to tell the Specificity
      -> for example class has more Specificity than an element
      -> a id has more Specificity than a class

-> Universal selector

      -> * is used as a universal selector. all the elements will have this properties.
      -> universal selector has the least specificity


-> Combining selectors

      -> like 
      -> .container p {
          color:red;
      } 

      -> What this does is is only makes the p element in the container class to red

-> Div is used to group block elements and span is used to group inline elements


-> Units :-

      -> pixels are absolute units. it means 40px in you laptop is same as 40px in some other device.
      -> 1px means 1 dot on the screen.


      -> Percent - it is a relative unit. it depend on the value of the parent.


      -> Em  -  these are also the relative values . generally it takes the base value from the parent browser . our browser by default base value is 16px.
      -> 2em means  -  16 * 2 = 32px


      -> Rem -  these are also relative values.It depends on the root element of the project rather than the parent.
      -> you can change root element size using browser or changing value of html tag.


      -> vh , vw   - these are viewport units . they take the percentage of the screen.
      -> if 10vh then it means , 10% if the screen height.if the screen changes size changes.
      -> 10vw means 10% of the screen width.
      -> here screen is nothing but the browser window screen size.




-> calc()  -  this func is used to do some calculations . it can used mixed units


-> height , min-height , max-height , overflow


-> Fonts - google fonts

        -> Select family of fonts , if one fails then we will always have a fallback to fall on

        -> We can use font-weight , font-style

        

-> Text-align , text indent :- 

      -> line height , letter spaciing  word spacing , text transform , text decoration






-> CSS BOX MODEL :-

      -> Padding , margin , border



-> Cheat trick :-

      -> When you are confused with the layout of all the elements with their margin and padding .
       use *{
            border: 1px solid red;
      }

      -> With this alll the elements will have borders.



-> Display property :-

      -> Block  -  new line and extenrs whole width.
      -> inline -  same line , doesnot extent whole width of screen


->Basic horzontal centering :-

      -> For inline elements we can center them using the parent element; text-align:center

      -> we can center only the text content in the block element using this way of text-align:center in parent element.

      -> we can center the whole block element in two steps 1. first give a width to your block element . 2. you can give margin:0 auto . means top and bottom margin is 0 and right , left margin is auto.

      -> To make the block elements left align then margin-right:auto;



-> Note :-

      -> INLINE Elements :- Browser does not respect width/height , top/bottom margin .

      -> Block Elements :- Browser respects width/height , top/bottom margin.


-> Box-sizing : border-box :-

      -> by default box-sizing is set to  content-box .

      -> it means that when width is 200 and padding if 20px is added then now total is 200 + 20 + 20 . the width of the box.


      -> if box-sizing : border box  
      -> it means that when width is  200 and padding is 20  then still the width is 200 and padding is added inside that width to the text.


-> Display : inline-block 

      -> what it does is it will not start a new line for the block and browser takes into consideration of width , height and margin 


-> display  : none 

      -> What it does is it makes the element disappear and makes space collapse.

-> opacity - 1 :-

      -> nothing , if it is 0 then it makes the element hidden but the space wont collapse. 

-> visibility : hiddne :-
      -> this also element disappear but place doesnot collapse